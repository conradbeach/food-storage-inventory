require:
  - rubocop-performance
  - rubocop-rails
  - rubocop-rspec

AllCops:
  Exclude:
    - 'bin/**/*'
    - 'node_modules/**/*'
    - 'db/schema.rb'
    - 'vendor/**/*'

Metrics/MethodLength:
  CountComments: false
  Max: 20

Style/Documentation:
  Enabled: false

Style/StringLiterals:
  Description: 'Checks if uses of quotes match the configured preference.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#consistent-string-literals'
  EnforcedStyle: double_quotes
  Enabled: true

Metrics/BlockLength:
  Description: 'This cop checks if the length of a block exceeds some maximum value. Comment lines can optionally be ignored. The maximum allowed length is configurable. The cop can be configured to ignore blocks passed to certain methods.'
  Exclude: ['spec/**/*', 'config/**/*', 'lib/tasks/**/*']
  Enabled: true
  
Naming/FileName:
  Description: This cop makes sure that Ruby source files have snake_case names. Ruby scripts (i.e. source files with a shebang in the first line) are ignored.
  Exclude: ['lib/tasks/**/*']
  Enabled: true

Layout/LineLength:
  Description: 'Limit lines to 80 characters.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#80-character-limits'
  Max: 100
  Enabled: true

Style/WordArray:
  Description: 'Use %w or %W for arrays of words.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#percent-w'
  Enabled: false

Style/SymbolArray:
  Description: 'Use `%i` or `%I` for an array of symbols'
  StyleGuide: 'http://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SymbolArray'
  Enabled: false

Style/TrailingCommaInArguments:
  Description: 'Checks for trailing comma in argument lists.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#no-trailing-array-commas'
  EnforcedStyleForMultiline: comma
  Enabled: true

Style/TrailingCommaInArrayLiteral:
  Description: 'Checks for trailing comma in array literals.'
  EnforcedStyleForMultiline: comma
  Enabled: true

Style/TrailingCommaInHashLiteral:
  Description: 'Checks for trailing comma in hash literals.'
  EnforcedStyleForMultiline: comma
  Enabled: true

Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented
  Enabled: true

Layout/MultilineOperationIndentation:
  Description: Checks indentation of binary operations that span more than one line.
  EnforcedStyle: indented
  Enabled: true

Layout/EmptyLinesAroundAttributeAccessor:
  Description: Checks for a newline after an attribute accessor or a group of them.
  Enabled: true

Layout/SpaceAroundMethodCallOperator:
  Description: Checks method call operators to not have spaces around them.
  Enabled: true

Style/RegexpLiteral:
  EnforcedStyle: slashes
  Enabled: true

Style/ExponentialNotation:
  Description: This cop enforces consistency when using exponential notation for numbers in the code (eg 1.2e4).
  Enabled: true

Style/HashEachMethods:
  Description: This cop checks for uses of each_key and each_value Hash methods.
  Enabled: true

Style/HashTransformKeys:
  Description: This cop looks for uses of `_.each_with_object({}) {...}`, `_.map {...}.to_h`, and `Hash[_.map {...}]` that are actually just transforming the keys of a hash, and tries to use a simpler & faster call to `transform_keys` instead.
  Enabled: true

Style/HashTransformValues:
  Description: This cop looks for uses of `_.each_with_object({}) {...}`, `_.map {...}.to_h`, and `Hash[_.map {...}]` that are actually just transforming the values of a hash, and tries to use a simpler & faster call to `transform_values` instead.
  Enabled: true

Style/SlicingWithRange:
  Description: This cop checks that arrays are sliced with endless ranges instead of ary[start..-1] on Ruby 2.6+.
  Enabled: true

Layout/ParameterAlignment:
  EnforcedStyle: with_fixed_indentation
  Enabled: true

Lint/DeprecatedOpenSSLConstant:
  Description: Algorithmic constants for OpenSSL::Cipher and OpenSSL::Digest deprecated since OpenSSL version 2.2.0. Prefer passing a string instead.
  Enabled: true

Lint/RaiseException:
  Description: This cop checks for raise or fail statements which are raising Exception class.
  Enabled: true

Lint/StructNewOverride:
  Description: This cop checks unexpected overrides of the Struct built-in methods via Struct.new.
  Enabled: true

RSpec/ExampleLength:
  Description: Checks for long examples. A long example is usually more difficult to understand. Consider extracting out some behaviour, e.g. with a let block, or a helper method.
  Max: 10
  Enabled: true

RSpec/MultipleExpectations:
  Description: Checks if examples contain too many expect calls.
  Max: 5
  Enabled: true

RSpec/NotToNot:
  Description: Checks for consistent method usage for negating expectations.
  EnforcedStyle: to_not
  Enabled: true

RSpec/NestedGroups:
  Description: Checks for nested example groups.
  Max: 5
  Enabled: true
